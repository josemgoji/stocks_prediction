version: "3.9"

services:
  postgres:
    image: postgres:14
    platform: linux/amd64
    container_name: mlflow_postgres
    restart: always
    environment:
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflow
      POSTGRES_DB: mlflow_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  minio:
    image: minio/minio
    platform: linux/amd64
    container_name: mlflow_minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: mlflow
      MINIO_ROOT_PASSWORD: mlflow_p@ssw0rd
    volumes:
      - minio_data:/data
    command: server --console-address ":9001" /data

  mlflow:
    build:
      context: .
      dockerfile: docker/Dockerfile
    platform: linux/amd64
    container_name: mlflow_server
    restart: always
    ports:
      - "8888:8888"
    environment:
      - MLFLOW_BACKEND_STORE_URI=postgresql://mlflow:mlflow@postgres:5432/mlflow_db
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=s3://mlflow
      - MLFLOW_ARTIFACTS_DESTINATION=s3://mlflow
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=mlflow
      - AWS_SECRET_ACCESS_KEY=mlflow_p@ssw0rd
      - AWS_S3_FORCE_PATH_STYLE=true
    depends_on:
      - postgres
      - minio
    volumes:
      - mlflow_data:/mlflow/artifacts

  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    platform: linux/amd64
    container_name: stocks_api
    restart: always
    ports:
      - "8000:8000"
    environment:
      - API_MLFLOW_TRACKING_URI=http://mlflow:8888
      - API_MLFLOW_REGISTRY_URI=http://mlflow:8888
      - FRED_API_KEY=${FRED_API_KEY:-}
    depends_on:
      - mlflow

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local
  mlflow_data:
    driver: local
